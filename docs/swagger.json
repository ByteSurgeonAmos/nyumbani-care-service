{
  "openapi": "3.0.0",
  "info": {
    "title": "Nyumbani Care Healthcare Platform API",
    "description": "A comprehensive healthcare platform API for telemedicine, test kits, prescriptions, and more. Digital-first healthcare platform for Africa providing test kit e-commerce, prescription management, lab work booking, telehealth consultations, health education, AI symptom checker, and CareSense analytics.",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@nyumbanicare.com",
      "url": "https://nyumbanicare.com/support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    },
    {
      "url": "https://api.nyumbanicare.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns the health status of the API",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "service": {
                      "type": "string",
                      "example": "nyumbani-care-api"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["System"]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "summary": "Login user",
        "description": "Authenticate user and return JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "tags": ["Authentication"]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "User already exists"
          }
        },
        "tags": ["Authentication"]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "summary": "Refresh token",
        "description": "Get a new token using a refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": ["refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        },
        "tags": ["Authentication"]
      }
    },
    "/api/v1/test-kits": {
      "get": {
        "summary": "List test kits",
        "description": "Get all available test kits",
        "responses": {
          "200": {
            "description": "List of test kits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestKit"
                  }
                }
              }
            }
          }
        },
        "tags": ["Test Kits"]
      }
    },
    "/api/v1/test-kits/{id}": {
      "get": {
        "summary": "Get test kit details",
        "description": "Get detailed information about a specific test kit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Test kit UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Test kit details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestKit"
                }
              }
            }
          },
          "404": {
            "description": "Test kit not found"
          }
        },
        "tags": ["Test Kits"]
      }
    },
    "/api/v1/orders": {
      "post": {
        "summary": "Create test kit order",
        "description": "Place an order for test kits",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Orders"]
      },
      "get": {
        "summary": "List user orders",
        "description": "Get all orders for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Orders"]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "summary": "Get current user profile",
        "description": "Get the profile of the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Users"]
      },
      "put": {
        "summary": "Update user profile",
        "description": "Update the profile of the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Users"]
      }
    },
    "/api/v1/test-kits/results/analyze": {
      "post": {
        "summary": "Upload and analyze test kit result",
        "description": "Upload test kit result image and get AI analysis",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "test_kit_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "test_kit_type": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["test_kit_id", "test_kit_type", "file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test kit result analyzed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestKitResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Test Kit Results"]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "other"]
          },
          "address": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "first_name",
          "last_name",
          "phone_number",
          "date_of_birth",
          "gender",
          "address"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TestKit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "stock_quantity": {
            "type": "integer"
          },
          "image_url": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "result_interpretation": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "test_kit_id": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer"
          },
          "total_price": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ]
          },
          "shipping_address": {
            "type": "string"
          },
          "tracking_number": {
            "type": "string"
          },
          "payment_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderRequest": {
        "type": "object",
        "properties": {
          "test_kit_id": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "shipping_address": {
            "type": "string"
          },
          "payment_method": {
            "type": "string",
            "enum": ["paystack", "mpesa", "card"]
          }
        },
        "required": ["test_kit_id", "quantity", "shipping_address"]
      },
      "TestKitResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "test_kit_id": {
            "type": "string",
            "format": "uuid"
          },
          "test_kit_type": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "result": {
            "type": "string",
            "enum": ["positive", "negative", "inconclusive", "invalid"]
          },
          "analysis": {
            "type": "string"
          },
          "recommendation": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
